{"version":3,"sources":["components/Ingredient.js","components/IngrendientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/App.js","index.js"],"names":["Ingredient","name","amount","IngrendientList","ingriedientElements","ingredients","map","ingredient","id","className","Recipe","props","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","image","cookTime","servings","instructions","src","alt","color","onClick","size","ripple","RecipeList","handleRecipeAdd","recipes","width","recipe","RecipeIngredientEdit","handleIngredientChange","handleIngredientDelete","handleChange","changes","type","value","onChange","e","target","RecipeEdit","handleRecipeChange","newIngredients","index","findIndex","i","filter","undefined","outline","placeholder","parseInt","newIngredient","uuidv4","handleIngredientAdd","React","createContext","LOCAL_STORAGE_KEY","sampleRecipes","App","useState","setRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","newRecipes","r","Provider","clear","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAUeA,MARf,YAAoC,IAAfC,EAAc,EAAdA,KAAKC,EAAS,EAATA,OACtB,OACI,mCACI,+BAAI,+BAAOD,IAAY,+BAAOC,UCS3BC,MAXf,YAAyC,IAC/BC,EAD8B,EAAdC,YACkBC,KAAI,SAAAC,GACxC,OAAO,cAAC,EAAD,eAAqCA,GAAnBA,EAAWC,OAExC,OACI,oBAAIC,UAAU,YAAd,SACKL,K,qGC+DEM,MA9Df,SAAgBC,GAAQ,IAAD,EAC6BC,qBAAWC,GAApDC,EADY,EACZA,mBAAmBC,EADP,EACOA,mBAEtBP,EAOAG,EAPAH,GACAP,EAMAU,EANAV,KACAe,EAKAL,EALAK,MACAC,EAIAN,EAJAM,SACAC,EAGAP,EAHAO,SACAC,EAEAR,EAFAQ,aACAd,EACAM,EADAN,YAEJ,OACI,qBAAKI,UAAU,YAAf,SACI,eAAC,IAAD,CAAMA,UAAU,SAAhB,UACI,cAAC,IAAD,CACIW,IAAKJ,EACLK,IAAI,aACJZ,UAAU,sBAGd,eAAC,IAAD,WACI,oBAAIa,MAAM,OAAV,SAAkBrB,IAClB,gCACI,6CACA,+BAAOgB,OAEX,gCACI,4CACA,+BAAOC,OAEX,gCACI,iDACA,cAAC,IAAD,CAAWI,MAAM,OAAjB,SACKH,OAGT,gCACI,gDACA,8BACI,cAAC,EAAD,CAAiBd,YAAaA,YAK1C,eAAC,IAAD,CAAYI,UAAU,OAAtB,UACI,cAAC,IAAD,CACIc,QAAS,kBAAMR,EAAmBP,IAClCc,MAAM,YACNE,KAAK,KACLC,OAAO,QAJX,kBAQA,cAAC,IAAD,CAAQF,QAAS,kBAAMT,EAAmBN,IAAKc,MAAM,MAAME,KAAK,KAAKC,OAAO,QAAQhB,UAAU,OAA9F,6BCrCLiB,MArBf,SAAoBf,GAAQ,IACjBgB,EAAmBf,qBAAWC,GAA9Bc,gBAEHC,EAEAjB,EAFAiB,QACAC,EACAlB,EADAkB,MAEJ,OACI,qCACI,cAAC,IAAD,CAAQpB,UAAU,gBAAgBc,QAASI,EAA3C,wBACA,qBAAKlB,UAAWoB,EAAhB,SACKD,EAAQtB,KAAI,SAAAwB,GACT,OAAO,cAAC,EAAD,eAECA,GADCA,EAAOtB,a,iCCuBrBuB,MArCf,SAA8BpB,GAAQ,IAE9BJ,EAGAI,EAHAJ,WACAyB,EAEArB,EAFAqB,uBACAC,EACAtB,EADAsB,uBAGJ,SAASC,EAAaC,GAClBH,EAAuBzB,EAAWC,GAAZ,YAAC,eAAmBD,GAAe4B,IAG7D,OACI,sBAAK1B,UAAU,kBAAf,UACI,cAAC,IAAD,CACI2B,KAAK,OACLd,MAAM,OACNE,KAAK,UACLa,MAAO9B,EAAWN,KAClBqC,SAAU,SAACC,GAAD,OAAOL,EAAa,CAACjC,KAAMsC,EAAEC,OAAOH,WAElD,cAAC,IAAD,CACID,KAAK,OACLd,MAAM,OACNE,KAAK,UACLa,MAAO9B,EAAWL,OAClBoC,SAAU,SAACC,GAAD,OAAOL,EAAa,CAAChC,OAAQqC,EAAEC,OAAOH,WAEpD,sBACI5B,UAAU,wBACVc,QAAS,kBAAMU,EAAuB1B,EAAWC,KAFrD,sB,iBCsFGiC,MA5Gf,YAA+B,IAAVX,EAAS,EAATA,OAAS,EACsBlB,qBAAWC,GAApD6B,EADmB,EACnBA,mBAAmB3B,EADA,EACAA,mBAE1B,SAASmB,EAAaC,GAClBO,EAAmBZ,EAAOtB,GAAR,YAAC,eAAesB,GAAWK,IAGjD,SAASH,EAAuBxB,EAAID,GAChC,IAAMoC,EAAc,YAAOb,EAAOzB,aAC5BuC,EAAQD,EAAeE,WAAU,SAAAC,GAAC,OAAIA,EAAEtC,KAAOA,KACrDmC,EAAeC,GAASrC,EACxB2B,EAAa,CAAC7B,YAAasC,IAY/B,SAASV,EAAuBzB,GAC5B0B,EAAa,CAAC7B,YAAayB,EAAOzB,YAAY0C,QAAO,SAAAD,GAAC,OAAIA,EAAEtC,KAAOA,OAGvE,OACI,qBAAKC,UAAU,SAAf,SACI,sBAAKA,UAAU,4BAAf,UACI,wBAAQA,UAAU,wBACVc,QAAS,kBAAMR,OAAmBiC,IAD1C,kBAKA,sBAAKvC,UAAU,YAAf,UACI,cAAC,IAAD,CACI2B,KAAK,OACLd,MAAM,OACNE,KAAK,UACLyB,SAAS,EACTC,YAAY,OACZb,MAAOP,EAAO7B,KACdqC,SAAU,SAAAC,GAAC,OAAIL,EAAa,CAACjC,KAAMsC,EAAEC,OAAOH,WAEhD,cAAC,IAAD,CACID,KAAK,OACLd,MAAM,OACNE,KAAK,UACLyB,SAAS,EACTC,YAAY,QACZb,MAAOP,EAAOd,MACdsB,SAAU,SAAAC,GAAC,OAAIL,EAAa,CAAClB,MAAOuB,EAAEC,OAAOH,WAEjD,cAAC,IAAD,CACID,KAAK,OACLd,MAAM,OACNE,KAAK,UACLyB,SAAS,EACTC,YAAY,YACZb,MAAOP,EAAOb,SACdqB,SAAU,SAAAC,GAAC,OAAIL,EAAa,CAACjB,SAAUsB,EAAEC,OAAOH,WAEpD,cAAC,IAAD,CACID,KAAK,SACLd,MAAM,OACNE,KAAK,UACLyB,SAAS,EACTC,YAAY,WACZb,MAAOP,EAAOZ,SACdoB,SAAU,SAAAC,GAAC,OAAIL,EAAa,CAAChB,SAAUiC,SAASZ,EAAEC,OAAOH,YAE7D,cAAC,IAAD,CACID,KAAK,OACLd,MAAM,OACNE,KAAK,UACLyB,SAAS,EACTC,YAAY,eACZb,MAAOP,EAAOX,aACdmB,SAAU,SAAAC,GAAC,OAAIL,EAAa,CAACf,aAAcoB,EAAEC,OAAOH,WAExD,sBAAK5B,UAAU,cAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,SAAf,kBACA,qBAAKA,UAAU,SAAf,oBACA,2BAEHqB,EAAOzB,YAAYC,KAAI,SAAAC,GAAU,OAC9B,cAAC,EAAD,CAEIyB,uBAAwBA,EACxBC,uBAAwBA,EACxB1B,WAAYA,GAHPA,EAAWC,OAMxB,cAAC,IAAD,CACIC,UAAU,gBACVc,QAAS,kBAnFjC,WACI,IAAM6B,EAAgB,CAClB5C,GAAI6C,MACJpD,KAAM,GACNC,OAAQ,IAEZgC,EAAa,CAAC7B,YAAY,GAAD,mBAAMyB,EAAOzB,aAAb,CAA0B+C,MA6EhBE,IAFnB,wC,sBC/FXzC,EAAgB0C,IAAMC,gBAC7BC,EAAoB,2BAmF1B,IAAMC,EAAgB,CACpB,CACElD,GAAI,EACJP,KAAM,gBACNe,MAAM,4FACNE,SAAU,EACVD,SAAU,OACVE,aAAc,iEACdd,YAAa,CACX,CACEG,GAAI,EACJP,KAAM,UACNC,OAAQ,YAEV,CACEM,GAAI,EACJP,KAAM,OACNC,OAAQ,WAId,CACEM,GAAI,EACJP,KAAM,aACNe,MAAM,oEACNE,SAAU,EACVD,SAAU,OACVE,aAAc,2DACdd,YAAa,CACX,CACEG,GAAI,EACJP,KAAM,OACNC,OAAQ,YAEV,CACEM,GAAI,EACJP,KAAM,UACNC,OAAQ,YAMDyD,EA5Hf,WAAgB,IAAD,EACiBC,mBAASF,GAD1B,mBACN9B,EADM,KACGiC,EADH,OAEmCD,qBAFnC,mBAENE,EAFM,KAEYC,EAFZ,KAGPC,EAAiBpC,EAAQqC,MAAK,SAAAnC,GAAM,OAAIA,EAAOtB,KAAOsD,KAG5DI,qBAAU,WACR,IAAMC,EAAaC,aAAaC,QAAQZ,GACtB,MAAdU,GAAoBN,EAAWS,KAAKC,MAAMJ,MAC7C,IAGHD,qBAAU,WACRE,aAAaI,QAAQf,EAAmBa,KAAKG,UAAU7C,MACtD,CAACA,IAGJ,IAAM8C,EAAsB,CAC1B/C,gBAWF,WACE,IAAMgD,EAAY,CAChBnE,GAAI6C,MACJpD,KAAM,GACNe,MAAM,GACNE,SAAU,EACVD,SAAU,GACVE,aAAc,GACdd,YAAa,CACX,CACEG,GAAG6C,MACHpD,KAAM,GACNC,OAAQ,MAId6D,EAAoBY,EAAUnE,IAC9BqD,EAAW,GAAD,mBAAKjC,GAAL,CAAc+C,MA3BxB7D,mBA8BF,SAA4BN,GAC1BqD,EAAWjC,EAAQmB,QAAO,SAAAjB,GAAM,OAAIA,EAAOtB,KAAOA,OA9BlDO,mBAGF,SAA4BP,GACC,MAAvBuD,GAA+BA,IAAwBvD,GACzDuD,OAAoBf,GAEtBe,EAAoBvD,IANpBkC,mBAgCF,SAA4BlC,EAAIsB,GAC9B,IAAM8C,EAAU,YAAOhD,GACjBgB,EAAQgC,EAAW/B,WAAU,SAAAgC,GAAC,OAAIA,EAAErE,KAAOA,KACjDoE,EAAWhC,GAASd,EACpB+B,EAAWe,KAQb,OACI,eAAC/D,EAAciE,SAAf,CAAwBzC,MAAOqC,EAA/B,UACE,cAAC,IAAD,CAAQjE,UAAU,qBAAqBa,MAAM,aAAaG,OAAO,QAAQF,QAP/E,WACE6C,aAAaW,QACbC,OAAOC,SAASC,UAKZ,gCACA,sBAAKzE,UAAU,6DAAf,UACGuD,GAAkB,cAAC,EAAD,CAAYlC,OAAQkC,IACtC,qBAAKvD,UAAU,SAAf,SACC,cAAC,EAAD,CACImB,QAASA,EACTC,OAAQmC,GAAkB,iCChF1CmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1185ed39.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Ingredient({name,amount}) {\n    return (\n        <>\n            <li><span>{name}</span><span>{amount}</span></li>\n        </>\n    );\n}\n\nexport default Ingredient;","import React from 'react';\nimport Ingredient from \"./Ingredient\";\n\nfunction IngrendientList({ingredients}) {\n    const ingriedientElements = ingredients.map(ingredient => {\n        return <Ingredient key ={ingredient.id} {...ingredient}/>\n    })\n    return (\n        <ul className=\"list-disc\">\n            {ingriedientElements}\n        </ul>\n    );\n}\n\nexport default IngrendientList;","import React, {useContext} from 'react';\nimport IngrendientList from \"./IngrendientList\";\nimport {RecipeContext} from \"./App\";\nimport Card from \"@material-tailwind/react/Card\";\nimport CardImage from \"@material-tailwind/react/CardImage\";\nimport CardBody from \"@material-tailwind/react/CardBody\";\nimport CardFooter from \"@material-tailwind/react/CardFooter\";\nimport Paragraph from \"@material-tailwind/react/Paragraph\";\nimport Button from \"@material-tailwind/react/Button\";\n\nfunction Recipe(props) {\n    const {handleRecipeDelete,handleRecipeSelect} = useContext(RecipeContext)\n    const {\n        id,\n        name,\n        image,\n        cookTime,\n        servings,\n        instructions,\n        ingredients,\n    } = props\n    return (\n        <div className=\"px-4 py-8\">\n            <Card className=\"h-full\">\n                <CardImage\n                    src={image}\n                    alt=\"Card Image\"\n                    className=\"h-48 object-cover\"\n                />\n\n                <CardBody>\n                    <h3 color=\"gray\">{name}</h3>\n                    <div>\n                        <span>Cook Time</span>\n                        <span>{cookTime}</span>\n                    </div>\n                    <div>\n                        <span>Serving:</span>\n                        <span>{servings}</span>\n                    </div>\n                    <div>\n                        <span>Instructions:</span>\n                        <Paragraph color=\"grey\">\n                            {instructions}\n                        </Paragraph>\n                    </div>\n                    <div>\n                        <span>Ingredients:</span>\n                        <div>\n                            <IngrendientList ingredients={ingredients}/>\n                        </div>\n                    </div>\n                </CardBody>\n\n                <CardFooter className=\"flex\">\n                    <Button\n                        onClick={() => handleRecipeSelect(id)}\n                        color=\"lightBlue\"\n                        size=\"lg\"\n                        ripple=\"light\"\n                    >\n                        Edit\n                    </Button>\n                    <Button onClick={() => handleRecipeDelete(id)} color=\"red\" size=\"lg\" ripple=\"light\" className=\"ml-2\">\n                        Delete\n                    </Button>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default Recipe;","import React, {useContext} from 'react';\nimport Recipe from \"./Recipe\";\nimport Button from \"@material-tailwind/react/Button\";\nimport {RecipeContext} from \"./App\";\n\nfunction RecipeList(props) {\n    const {handleRecipeAdd} = useContext(RecipeContext)\n    const {\n        recipes,\n        width\n    } = props\n    return (\n        <>\n            <Button className=\"mx-auto my-12\" onClick={handleRecipeAdd}>Add Recipe</Button>\n            <div className={width}>\n                {recipes.map(recipe => {\n                    return <Recipe\n                        key={recipe.id}\n                        {...recipe}\n                    />\n                })}\n            </div>\n        </>\n    );\n}\n\nexport default RecipeList;","import React from 'react';\nimport Input from \"@material-tailwind/react/Input\";\n\nfunction RecipeIngredientEdit(props) {\n    const {\n        ingredient,\n        handleIngredientChange,\n        handleIngredientDelete\n    } = props\n\n    function handleChange(changes) {\n        handleIngredientChange(ingredient.id, {...ingredient, ...changes})\n    }\n\n    return (\n        <div className=\"flex space-x-10\">\n            <Input\n                type=\"text\"\n                color=\"pink\"\n                size=\"regular\"\n                value={ingredient.name}\n                onChange={(e) => handleChange({name: e.target.value})}\n            />\n            <Input\n                type=\"text\"\n                color=\"pink\"\n                size=\"regular\"\n                value={ingredient.amount}\n                onChange={(e) => handleChange({amount: e.target.value})}\n            />\n            <span\n                className=\"text-red-500 text-5xl\"\n                onClick={() => handleIngredientDelete(ingredient.id)}\n            >\n                &times;\n            </span>\n        </div>\n    );\n}\n\nexport default RecipeIngredientEdit;","import React, { useContext } from 'react';\nimport Input from \"@material-tailwind/react/Input\";\nimport Textarea from \"@material-tailwind/react/Textarea\"\nimport Button from \"@material-tailwind/react/Button\"\nimport RecipeIngredientEdit from './RecipeIngredientEdit'\nimport {RecipeContext} from \"./App\";\nimport uuidv4 from 'uuid/dist/v4'\n\nfunction RecipeEdit({recipe}) {\n    const {handleRecipeChange,handleRecipeSelect} = useContext(RecipeContext)\n\n    function handleChange(changes) {\n        handleRecipeChange(recipe.id, {...recipe, ...changes})\n    }\n\n    function handleIngredientChange(id, ingredient) {\n        const newIngredients = [...recipe.ingredients]\n        const index = newIngredients.findIndex(i => i.id === id)\n        newIngredients[index] = ingredient\n        handleChange({ingredients: newIngredients})\n    }\n\n    function handleIngredientAdd() {\n        const newIngredient = {\n            id: uuidv4(),\n            name: '',\n            amount: ''\n        }\n        handleChange({ingredients: [...recipe.ingredients, newIngredient]})\n    }\n\n    function handleIngredientDelete(id) {\n        handleChange({ingredients: recipe.ingredients.filter(i => i.id !== id)})\n    }\n\n    return (\n        <div className=\"w-full\">\n            <div className=\"md:fixed md:w-1/2 md:pr-8\">\n                <button className=\"text-6xl flex ml-auto\"\n                        onClick={() => handleRecipeSelect(undefined)\n                        }>\n                    &times;\n                </button>\n                <div className=\"space-y-4\">\n                    <Input\n                        type=\"text\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Name\"\n                        value={recipe.name}\n                        onChange={e => handleChange({name: e.target.value})}\n                    />\n                    <Input\n                        type=\"text\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Image\"\n                        value={recipe.image}\n                        onChange={e => handleChange({image: e.target.value})}\n                    />\n                    <Input\n                        type=\"text\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Cook Time\"\n                        value={recipe.cookTime}\n                        onChange={e => handleChange({cookTime: e.target.value})}\n                    />\n                    <Input\n                        type=\"number\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Servings\"\n                        value={recipe.servings}\n                        onChange={e => handleChange({servings: parseInt(e.target.value)})}\n                    />\n                    <Textarea\n                        type=\"text\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Instructions\"\n                        value={recipe.instructions}\n                        onChange={e => handleChange({instructions: e.target.value})}\n                    />\n                    <div className=\"ingredients\">\n                        <div className=\"flex\">\n                            <div className=\"flex-1\">Name</div>\n                            <div className=\"flex-1\">Amount</div>\n                            <div></div>\n                        </div>\n                        {recipe.ingredients.map(ingredient => (\n                            <RecipeIngredientEdit\n                                key={ingredient.id}\n                                handleIngredientChange={handleIngredientChange}\n                                handleIngredientDelete={handleIngredientDelete}\n                                ingredient={ingredient}\n                            />\n                        ))}\n                        <Button\n                            className=\"mx-auto my-12\"\n                            onClick={() => handleIngredientAdd()\n                            }>\n                            Add Ingredient\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RecipeEdit;","import React, {useState, useEffect} from 'react';\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport '../css/app.css'\nimport \"@material-tailwind/react/tailwind.css\";\nimport uuidv4 from 'uuid/dist/v4'\nimport {Button} from \"@material-tailwind/react\";\n\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.recipes'\n\nfunction App() {\n  const [recipes, setRecipes] = useState(sampleRecipes)\n  const [selectedRecipeId, setSelectedRecipeId] = useState()\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId)\n\n  // always when the dom changes\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY)\n    if (recipeJSON != null) setRecipes(JSON.parse(recipeJSON))\n  }, [])\n\n  // only when recipes changes\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes))\n  }, [recipes])\n\n\n  const recipeContextValue =  {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  }\n  function handleRecipeSelect(id) {\n    if (setSelectedRecipeId != null && setSelectedRecipeId === id) {\n      setSelectedRecipeId(undefined)\n    }\n    setSelectedRecipeId(id);\n  }\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: '',\n      image:'',\n      servings: 1,\n      cookTime: '',\n      instructions: '',\n      ingredients: [\n        {\n          id:uuidv4(),\n          name: '',\n          amount: ''\n        }\n      ]\n    }\n    setSelectedRecipeId(newRecipe.id)\n    setRecipes([...recipes, newRecipe])\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter(recipe => recipe.id !== id))\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes]\n    const index = newRecipes.findIndex(r => r.id === id)\n    newRecipes[index] = recipe\n    setRecipes(newRecipes)\n  }\n\n  function handleResetLocalstorage() {\n    localStorage.clear()\n    window.location.reload()\n  }\n\n  return (\n      <RecipeContext.Provider value={recipeContextValue}>\n        <Button className=\"flex mx-auto mt-12\" color=\"deepOrange\" ripple=\"light\" onClick={handleResetLocalstorage}>Reset Localstorage</Button>\n        <div className=\"md:p-4 md:flex p-4 md:p-0 md:space-x-4 md:flex-row-reverse\">\n          {selectedRecipe && <RecipeEdit recipe={selectedRecipe}/>}\n           <div className=\"w-full\">\n            <RecipeList\n                recipes={recipes}\n                width={!selectedRecipe && \"grid md:grid-cols-2\"}\n            />\n          </div>\n        </div>\n      </RecipeContext.Provider>\n  )\n}\n\nconst sampleRecipes = [\n  {\n    id: 1,\n    name: 'Plain Chicken',\n    image:'https://martin-skills.ch/uploads/hobby/c978fd72ed8f311eda1052056532e31b-616df48645086.jpg',\n    servings: 3,\n    cookTime: '1:45',\n    instructions: \"1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat chicken\",\n    ingredients: [\n      {\n        id: 1,\n        name: 'Chicken',\n        amount: '2 Pounds'\n      },\n      {\n        id: 2,\n        name: 'Salt',\n        amount: '1 Tbs'\n      }\n    ]\n  },\n  {\n    id: 2,\n    name: 'Plain Pork',\n    image:'https://martin-skills.ch/uploads/hobby/FILE0014-616df1b950208.jpg',\n    servings: 5,\n    cookTime: '0:45',\n    instructions: \"1. Put paprika on pork\\n2. Put pork in oven\\n3. Eat pork\",\n    ingredients: [\n      {\n        id: 1,\n        name: 'Pork',\n        amount: '3 Pounds'\n      },\n      {\n        id: 2,\n        name: 'Paprika',\n        amount: '2 Tbs'\n      }\n    ]\n  }\n]\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}