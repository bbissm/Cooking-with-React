{"version":3,"sources":["components/SearchBar.js","components/NavigationBar.js","components/Ingredient.js","components/IngrendientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/App.js","index.js"],"names":["SearchBar","props","handleSearch","useContext","RecipeContext","type","placeholder","onChange","e","target","value","NavigationBar","handleResetLocalstorage","useState","openNavbar","setOpenNavbar","color","navbar","onClick","ripple","open","leftSide","active","name","size","href","className","rightSide","hidden","Ingredient","amount","IngrendientList","ingriedientElements","ingredients","map","ingredient","id","Recipe","handleRecipeDelete","handleRecipeSelect","image","cookTime","servings","instructions","src","alt","RecipeList","handleRecipeAdd","recipes","width","recipe","RecipeIngredientEdit","handleIngredientChange","handleIngredientDelete","handleChange","changes","RecipeEdit","handleRecipeChange","newIngredients","index","findIndex","i","filter","undefined","outline","parseInt","newIngredient","uuidv4","handleIngredientAdd","React","createContext","LOCAL_STORAGE_KEY","sampleRecipes","App","setRecipes","selectedRecipeId","setSelectedRecipeId","shownRecipes","setShownRecipes","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","newRecipes","r","search","toLowerCase","includes","Provider","clear","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e87c2739.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport NavbarInput from \"@material-tailwind/react/NavbarInput\";\nimport NavbarCollapse from \"@material-tailwind/react/NavbarCollapse\";\nimport {RecipeContext} from \"./App\";\n\nfunction SearchBar(props) {\n    const {handleSearch} = useContext(RecipeContext)\n\n    return (\n        <div>\n            <NavbarInput type=\"text\" placeholder=\"Search here\" onChange={(e) => handleSearch(e.target.value)} />\n        </div>\n    );\n}\n\nexport default SearchBar;","import React, { useState } from \"react\";\nimport Navbar from \"@material-tailwind/react/Navbar\";\nimport NavbarContainer from \"@material-tailwind/react/NavbarContainer\";\nimport NavbarWrapper from \"@material-tailwind/react/NavbarWrapper\";\nimport NavbarBrand from \"@material-tailwind/react/NavbarBrand\";\nimport NavbarToggler from \"@material-tailwind/react/NavbarToggler\";\nimport NavbarCollapse from \"@material-tailwind/react/NavbarCollapse\";\nimport Nav from \"@material-tailwind/react/Nav\";\nimport NavItem from \"@material-tailwind/react/NavItem\";\nimport NavLink from \"@material-tailwind/react/NavLink\";\nimport Icon from \"@material-tailwind/react/Icon\";\nimport Button from \"@material-tailwind/react/Button\";\nimport {RecipeContext} from \"./App\";\nimport SearchBar from \"./SearchBar\";\n\n\nfunction NavigationBar({handleResetLocalstorage}) {\n    const [openNavbar, setOpenNavbar] = useState(false);\n\n    return (\n        <Navbar color=\"lightBlue\" navbar>\n            <NavbarContainer>\n                <NavbarWrapper>\n                    <NavbarBrand>Navbar</NavbarBrand>\n                    <NavbarToggler\n                        color=\"white\"\n                        onClick={() => setOpenNavbar(!openNavbar)}\n                        ripple=\"light\"\n                    />\n                </NavbarWrapper>\n                <NavbarCollapse open={openNavbar}>\n                    <Nav leftSide>\n                        <NavItem active=\"light\" ripple=\"light\">\n                            <Icon name=\"language\" size=\"xl\" />\n                            Discover\n                        </NavItem>\n                        <NavLink href=\"#navbar\" ripple=\"light\">\n                            <Icon name=\"account_circle\" size=\"xl\" />\n                            Profile\n                        </NavLink>\n                        <NavItem ripple=\"light\">\n                            <Icon name=\"settings\" size=\"xl\" />\n                            Settings\n                        </NavItem>\n                    </Nav>\n                    <Button className=\"flex mx-auto\" color=\"deepOrange\" ripple=\"light\" onClick={handleResetLocalstorage}>Reset Localstorage</Button>\n\n                    <Nav rightSide>\n                        <SearchBar\n                            hidden={\"hidden\"}\n                        />\n                    </Nav>\n                </NavbarCollapse>\n            </NavbarContainer>\n        </Navbar>\n    );\n}\n\n\nexport default NavigationBar;","import React from 'react';\n\nfunction Ingredient({name,amount}) {\n    return (\n        <>\n            <li><span>{name}</span><span>{amount}</span></li>\n        </>\n    );\n}\n\nexport default Ingredient;","import React from 'react';\nimport Ingredient from \"./Ingredient\";\n\nfunction IngrendientList({ingredients}) {\n    const ingriedientElements = ingredients.map(ingredient => {\n        return <Ingredient key ={ingredient.id} {...ingredient}/>\n    })\n    return (\n        <ul className=\"list-disc\">\n            {ingriedientElements}\n        </ul>\n    );\n}\n\nexport default IngrendientList;","import React, {useContext} from 'react';\nimport IngrendientList from \"./IngrendientList\";\nimport {RecipeContext} from \"./App\";\nimport Card from \"@material-tailwind/react/Card\";\nimport CardImage from \"@material-tailwind/react/CardImage\";\nimport CardBody from \"@material-tailwind/react/CardBody\";\nimport CardFooter from \"@material-tailwind/react/CardFooter\";\nimport Paragraph from \"@material-tailwind/react/Paragraph\";\nimport Button from \"@material-tailwind/react/Button\";\n\nfunction Recipe(props) {\n    const {handleRecipeDelete,handleRecipeSelect} = useContext(RecipeContext)\n    const {\n        id,\n        name,\n        image,\n        cookTime,\n        servings,\n        instructions,\n        ingredients,\n    } = props\n    return (\n        <div className=\"px-4 py-8\">\n            <Card className=\"h-full\">\n                <CardImage\n                    src={image}\n                    alt=\"Card Image\"\n                    className=\"h-48 object-cover\"\n                />\n\n                <CardBody>\n                    <h3 color=\"gray\">{name}</h3>\n                    <div>\n                        <span>Cook Time</span>\n                        <span>{cookTime}</span>\n                    </div>\n                    <div>\n                        <span>Serving:</span>\n                        <span>{servings}</span>\n                    </div>\n                    <div>\n                        <span>Instructions:</span>\n                        <Paragraph color=\"grey\">\n                            {instructions}\n                        </Paragraph>\n                    </div>\n                    <div>\n                        <span>Ingredients:</span>\n                        <div>\n                            <IngrendientList ingredients={ingredients}/>\n                        </div>\n                    </div>\n                </CardBody>\n\n                <CardFooter className=\"flex\">\n                    <Button\n                        onClick={() => handleRecipeSelect(id)}\n                        color=\"lightBlue\"\n                        size=\"lg\"\n                        ripple=\"light\"\n                    >\n                        Edit\n                    </Button>\n                    <Button onClick={() => handleRecipeDelete(id)} color=\"red\" size=\"lg\" ripple=\"light\" className=\"ml-2\">\n                        Delete\n                    </Button>\n                </CardFooter>\n            </Card>\n        </div>\n    );\n}\n\nexport default Recipe;","import React, {useContext} from 'react';\nimport Recipe from \"./Recipe\";\nimport Button from \"@material-tailwind/react/Button\";\nimport {RecipeContext} from \"./App\";\n\nfunction RecipeList(props) {\n    const {handleRecipeAdd} = useContext(RecipeContext)\n    const {\n        recipes,\n        width\n    } = props\n    return (\n        <>\n            <Button className=\"mx-auto my-12\" onClick={handleRecipeAdd}>Add Recipe</Button>\n            <div className={width}>\n                {recipes.map(recipe => {\n                    return <Recipe\n                        key={recipe.id}\n                        {...recipe}\n                    />\n                })}\n            </div>\n        </>\n    );\n}\n\nexport default RecipeList;","import React from 'react';\nimport Input from \"@material-tailwind/react/Input\";\n\nfunction RecipeIngredientEdit(props) {\n    const {\n        ingredient,\n        handleIngredientChange,\n        handleIngredientDelete\n    } = props\n\n    function handleChange(changes) {\n        handleIngredientChange(ingredient.id, {...ingredient, ...changes})\n    }\n\n    return (\n        <div className=\"flex space-x-10\">\n            <Input\n                type=\"text\"\n                color=\"pink\"\n                size=\"regular\"\n                value={ingredient.name}\n                onChange={(e) => handleChange({name: e.target.value})}\n            />\n            <Input\n                type=\"text\"\n                color=\"pink\"\n                size=\"regular\"\n                value={ingredient.amount}\n                onChange={(e) => handleChange({amount: e.target.value})}\n            />\n            <span\n                className=\"text-red-500 text-5xl\"\n                onClick={() => handleIngredientDelete(ingredient.id)}\n            >\n                &times;\n            </span>\n        </div>\n    );\n}\n\nexport default RecipeIngredientEdit;","import React, { useContext } from 'react';\nimport Input from \"@material-tailwind/react/Input\";\nimport Textarea from \"@material-tailwind/react/Textarea\"\nimport Button from \"@material-tailwind/react/Button\"\nimport RecipeIngredientEdit from './RecipeIngredientEdit'\nimport {RecipeContext} from \"./App\";\nimport uuidv4 from 'uuid/dist/v4'\n\nfunction RecipeEdit({recipe}) {\n    const {handleRecipeChange,handleRecipeSelect} = useContext(RecipeContext)\n\n    function handleChange(changes) {\n        handleRecipeChange(recipe.id, {...recipe, ...changes})\n    }\n\n    function handleIngredientChange(id, ingredient) {\n        const newIngredients = [...recipe.ingredients]\n        const index = newIngredients.findIndex(i => i.id === id)\n        newIngredients[index] = ingredient\n        handleChange({ingredients: newIngredients})\n    }\n\n    function handleIngredientAdd() {\n        const newIngredient = {\n            id: uuidv4(),\n            name: '',\n            amount: ''\n        }\n        handleChange({ingredients: [...recipe.ingredients, newIngredient]})\n    }\n\n    function handleIngredientDelete(id) {\n        handleChange({ingredients: recipe.ingredients.filter(i => i.id !== id)})\n    }\n\n    return (\n        <div className=\"w-full\">\n            <div className=\"md:fixed md:w-1/2 md:pr-8\">\n                <button className=\"text-6xl flex ml-auto\"\n                        onClick={() => handleRecipeSelect(undefined)\n                        }>\n                    &times;\n                </button>\n                <div className=\"space-y-4\">\n                    <Input\n                        type=\"text\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Name\"\n                        value={recipe.name}\n                        onChange={e => handleChange({name: e.target.value})}\n                    />\n                    <Input\n                        type=\"text\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Image\"\n                        value={recipe.image}\n                        onChange={e => handleChange({image: e.target.value})}\n                    />\n                    <Input\n                        type=\"text\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Cook Time\"\n                        value={recipe.cookTime}\n                        onChange={e => handleChange({cookTime: e.target.value})}\n                    />\n                    <Input\n                        type=\"number\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Servings\"\n                        value={recipe.servings}\n                        onChange={e => handleChange({servings: parseInt(e.target.value)})}\n                    />\n                    <Textarea\n                        type=\"text\"\n                        color=\"pink\"\n                        size=\"regular\"\n                        outline={true}\n                        placeholder=\"Instructions\"\n                        value={recipe.instructions}\n                        onChange={e => handleChange({instructions: e.target.value})}\n                    />\n                    <div className=\"ingredients\">\n                        <div className=\"flex\">\n                            <div className=\"flex-1\">Name</div>\n                            <div className=\"flex-1\">Amount</div>\n                            <div></div>\n                        </div>\n                        {recipe.ingredients.map(ingredient => (\n                            <RecipeIngredientEdit\n                                key={ingredient.id}\n                                handleIngredientChange={handleIngredientChange}\n                                handleIngredientDelete={handleIngredientDelete}\n                                ingredient={ingredient}\n                            />\n                        ))}\n                        <Button\n                            className=\"mx-auto my-12\"\n                            onClick={() => handleIngredientAdd()\n                            }>\n                            Add Ingredient\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RecipeEdit;","import React, {useState, useEffect} from 'react';\nimport NavigationBar from \"./NavigationBar\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport '../css/app.css'\nimport \"@material-tailwind/react/tailwind.css\";\nimport uuidv4 from 'uuid/dist/v4'\n\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.recipes'\n\nfunction App() {\n  const [recipes, setRecipes] = useState(sampleRecipes)\n  const [selectedRecipeId, setSelectedRecipeId] = useState()\n  const [shownRecipes, setShownRecipes] = useState(recipes)\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId)\n\n  // always when the dom changes\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY)\n    if (recipeJSON != null) setRecipes(JSON.parse(recipeJSON))\n  }, [])\n\n  // only when recipes changes\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes))\n    setShownRecipes(recipes)\n  }, [recipes])\n\n  const recipeContextValue =  {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n    handleSearch\n  }\n\n  function handleRecipeSelect(id) {\n    if (setSelectedRecipeId != null && setSelectedRecipeId === id) {\n      setSelectedRecipeId(undefined)\n    }\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: '',\n      image:'',\n      servings: 1,\n      cookTime: '',\n      instructions: '',\n      ingredients: [\n        {\n          id:uuidv4(),\n          name: '',\n          amount: ''\n        }\n      ]\n    }\n    setSelectedRecipeId(newRecipe.id)\n    setRecipes([...recipes, newRecipe])\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter(recipe => recipe.id !== id))\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes]\n    const index = newRecipes.findIndex(r => r.id === id)\n    newRecipes[index] = recipe\n    setRecipes(newRecipes)\n  }\n\n  function handleResetLocalstorage() {\n    localStorage.clear()\n    window.location.reload()\n  }\n\n  function handleSearch (search) {\n    setShownRecipes(recipes.filter(r => r.name.toLowerCase().includes(search)))\n  }\n\n  return (\n      <RecipeContext.Provider value={recipeContextValue}>\n        <NavigationBar\n            handleResetLocalstorage={handleResetLocalstorage}\n        />\n        <div className=\"md:p-4 md:flex p-4 md:p-0 md:space-x-4 md:flex-row-reverse\">\n          {selectedRecipe && <RecipeEdit recipe={selectedRecipe}/>}\n           <div className=\"w-full\">\n            <RecipeList\n                recipes={shownRecipes}\n                width={!selectedRecipe && \"grid md:grid-cols-2\"}\n            />\n          </div>\n        </div>\n      </RecipeContext.Provider>\n  )\n}\n\nconst sampleRecipes = [\n  {\n    id: 1,\n    name: 'Plain Chicken',\n    image:'https://martin-skills.ch/uploads/hobby/c978fd72ed8f311eda1052056532e31b-616df48645086.jpg',\n    servings: 3,\n    cookTime: '1:45',\n    instructions: \"1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat chicken\",\n    ingredients: [\n      {\n        id: 1,\n        name: 'Chicken',\n        amount: '2 Pounds'\n      },\n      {\n        id: 2,\n        name: 'Salt',\n        amount: '1 Tbs'\n      }\n    ]\n  },\n  {\n    id: 2,\n    name: 'Plain Pork',\n    image:'https://martin-skills.ch/uploads/hobby/FILE0014-616df1b950208.jpg',\n    servings: 5,\n    cookTime: '0:45',\n    instructions: \"1. Put paprika on pork\\n2. Put pork in oven\\n3. Eat pork\",\n    ingredients: [\n      {\n        id: 1,\n        name: 'Pork',\n        amount: '3 Pounds'\n      },\n      {\n        id: 2,\n        name: 'Paprika',\n        amount: '2 Tbs'\n      }\n    ]\n  }\n]\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}